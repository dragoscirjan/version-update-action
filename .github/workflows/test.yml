name: Test Version Update Action

on:
  workflow_dispatch:
  push:
    branches:
      - main
  #  pull_request:

jobs:
  test-version-update-action:
    runs-on: ubuntu-latest
    env:
      VERSION_MESSAGE: "do the version update"
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Fetch full history so git log works

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Set up Git
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git config --global --add safe.directory "$GITHUB_WORKSPACE"

      - name: Commit Info
        id: git_info
        run: |
          last_commit_message=$(git log -1 --no-merges --pretty=format:%B)
          echo "last_commit_message=${last_commit_message}"
          echo "last_commit_message<<EOF" >> $GITHUB_OUTPUT
          echo "${last_commit_message}" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

          last_pr_message=$(git log -1 --pretty=format:%B)
          echo "last_pr_message=${last_pr_message}"
          echo "last_pr_message<<EOF" >> $GITHUB_OUTPUT
          echo "${last_pr_message}" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create Test Commit (Single Project)
        if: ${{ github.event_name == 'push' && !contains(steps.git_info.outputs.last_commit_message, env.VERSION_MESSAGE) }}
        run: |
          date +%s > ./test/node/.update
          git add ./test
          git commit -m "feat: Added a feature"

      - name: Run Version Update Action (Single Project)
        id: update_sp
        if: ${{ github.event_name != 'pull_request' }}
        uses: dragoscirjan/version-update-action@main
        with:
          github_token: "${{ secrets.GH_TOKEN }}"
          # github_token: "${{ secrets.GITHUB_TOKEN }}"
          version_message: "${{ env.VERSION_MESSAGE }}"
          workspaces: test/node

      - name: Pull Request Debug (Single Project)
        env:
          GH_TOKEN: "${{ secrets.GH_TOKEN }}"
        if: ${{ github.event_name == 'push' && !contains(steps.git_info.outputs.last_commit_message, env.VERSION_MESSAGE) }}
        run: |
          echo "version_branch=${{ steps.update_sp.outputs.version_branch }}"
          echo "pr_title=${{ update_sp.outputs.pr_title }}"

          gh pr list --state open

    #       - title: multi project
    #         workspaces: test,test/node,test/node-2
    #         version_files: VERSION,package.json,package.json
    #         commit_tag: fix
    #       - title: multi project, multi lang
    #         workspaces: test,test/node,test/node-2
    #         version_files: VERSION,package.json,package.json
    #         commit_tag: fix
    #         no_pr: 1
