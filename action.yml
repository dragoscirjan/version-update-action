name: version-update-action
description: Github Action for Updating Versions

inputs:
  workspaces:
    description: Paths to the workspaces (separated by comma)
    default: "."
  version_files:
    description: Version files to look for in each workspace (separated by comma)
    default: package.json
  no_pr:
    description: Use pull request to increase the version
  dry_run:
    description: Do nothing. Will just print commands to run

runs:
  using: "composite"
  steps:
    - name: Git Info
      id: git_info
      shell: bash
      run: |
        echo "commit_message=$(git log -1 --no-merges --pretty=format:%B)" >> $GITHUB_OUTPUT
        echo "pr_message=$(git log -1 --pretty=format:%B)" >> $GITHUB_OUTPUT

    - name: Version Info
      id: version_info
      shell: bash
      run: |
        commit_message=${{ steps.git_info.outputs.commit_message }}

        increment=""
        if [[ "$commit_message" == "feat!:"* || "$commit_message" == "feature!:"* || "$commit_message" == *"BREAKING CHANGE"* ]]; then
          increment="major"
        elif [[ "$commit_message" == "feat:"* || "$commit_message" == "feature:"* ]]; then
          increment="minor"
        elif [[ "$commit_message" == "fix:"* ]]; then
          increment="patch"
        fi
        echo "increment=\"${increment}\""
        echo "increment=\"${increment}\"" >> $GITHUB_OUTPUT

        pre_release_id=""
        if [[ "$commit_message" == "(rc"* || "$commit_message" == "(release-candidate"* ]]; then
          pre_release_id=$(echo "$commit_message" | grep -oP '\((rc|release-candidate)(?::\K[^)]*|)\)' | sed 's/^$/rc/')
        fi
        echo "pre_release_id=\"${pre_release_id}\""
        echo "pre_release_id=\"${pre_release_id}\"" >> $GITJHUB_OUTPUT

    - name: Commands Warmup
      id: git-info
      shell: bash
      run: |
        # for release-it, will not use npm push, git tag and git push 
        RELEASEIT="npx release-it --no-npm --git.tag=false --git.push=false"
        RELEASEIT="${RELEASEIT} --incremnet=${{ steps.version_info.outputs.increment }}"
        if [[ -n "${{ steps.version_info.outputs.pre_release_id }}" ]]; then
          RELEASEIT="${RELEASE} --preReleaseId=${{ steps.version_info.outputs.pre_release_id }}"
        fi

        echo "RELEASEIT=\"$RELEASEIT\"" >> $GITHUB_OUTPUT

    - name: Debug Commands
      shell: bash
      run: |
        echo env=$(echo '${{ toJSON(env) }}' | jq -r '.')
